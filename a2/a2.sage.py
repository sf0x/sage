
# This file was *autogenerated* from the file a2.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_1048368573847272683495828220422329672575844726363 = Integer(1048368573847272683495828220422329672575844726363); _sage_const_1023898712689528037525444 = Integer(1023898712689528037525444); _sage_const_5 = Integer(5)# secure divide
def secdiv(p,g):
	c=floor(p/g)
	if c == _sage_const_0 :
		c=_sage_const_1 
	return c

def my_eea(g, p, op):

	#print("g="+str(g)+"p="+str(p))
	
	if p<g:
		tmp=g
		g=p
		p=tmp
	
	if op == '+':
		return p-g
	i=_sage_const_0 
	#print("g="+str(g)+"p="+str(p))
	r0=[p]
	r1=[g]
	q=[secdiv(p,g)]
	t=[_sage_const_0 ]
	s=[_sage_const_0 ]
	while(r1[i]>_sage_const_0 ):
		i=i+_sage_const_1 
		r0.append(r1[i-_sage_const_1 ])
		r1.append(r0[i-_sage_const_1 ]%r1[i-_sage_const_1 ])
		if(r1[i]!=_sage_const_0 ):
			q.append(secdiv(r0[i],r1[i]))
		else:
			q.append(_sage_const_0 )
		s.append(_sage_const_0 )
		t.append(_sage_const_0 )
	
	i=i-_sage_const_1 
	t[i]=_sage_const_0 
	s[i]=_sage_const_1 
	while(i>_sage_const_0 ):
		i=i-_sage_const_1 
		t[i]=s[i+_sage_const_1 ]
		s[i]=t[i+_sage_const_1 ]-(q[i]*t[i])
		"""
		print("r0="+str(r0[i])),
		print("r1="+str(r1[i])),
		print("q="+str(q[i])),
		print("t="+str(t[i])),
		print(" s="+str(s[i]))
		"""
	if s[_sage_const_0 ]<_sage_const_0 :
		s[_sage_const_0 ]=p+s[_sage_const_0 ]
	if s[_sage_const_0 ]==_sage_const_0 :
		print("zeroerror")
	return s[_sage_const_0 ]

# ceil(sqrt(1048368573847272683495828220422329672575844726363)) == 1023898712689528037525444
g=_sage_const_5 
m=_sage_const_1023898712689528037525444 
p=_sage_const_1048368573847272683495828220422329672575844726363 
#g=3
#m=3
#p=29

op='*'
g=mod(g,p)**m 	# g == 27
g=g.lift()
#g=int(g)
print("g="+str(g))
#print(type(g))
#print(type(p))
#print(type(m))

print(str(my_eea(g,p,op)))

